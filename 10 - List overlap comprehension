# This weekâ€™s exercise is going to be revisiting an old exercise (see Exercise 5), except require the solution 
# in a different way.

#Take two lists, say for example these two:

"""
	a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
	b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
"""

# and write a program that returns a list that contains only the elements that are common between the lists
# (without duplicates). Make sure your program works on two lists of different sizes. Write this using at least one
# list comprehension. (Hint: Remember list comprehensions from Exercise 7).

# The original formulation of this exercise said to write the solution using one line of Python, but a few readers
# pointed out that this was impossible to do without using sets that I had not yet discussed on the blog, so you
# can either choose to use the original directive and read about the set command in Python 3.3, or try to implement
# this on your own and use at least one list comprehension in the solution.

# Extra:

# Randomly generate two lists to test this

a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

common_list = [x for x in a if x in b]

# for extra part:
from random import randint
import random

number_of_lists = 2

random_lists = []
for number in xrange(0, number_of_lists):
	list_length = randint(0,99)
	random_lists.append(random.sample(range(1,100), list_length))
print random_lists[0]
print random_lists[1]

common_list2 = [x for x in random_lists[0] if x in random_lists[1]]
print common_list2
